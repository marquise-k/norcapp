{"version":3,"file":"static/webpack/static/development/pages/index.js.dd8f2e0beb2486416b24.hot-update.js","sources":["webpack:///./lib/database.js","webpack:///./pages/App.css","webpack:///./pages/App.js"],"sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport function loadFirebase() {\n  // Initialize Firebase\n\n  const config = {\n    apiKey: process.env.FIREBASE_API_KEY,\n    authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.FIREBASE_DATA_URL,\n    projectId: process.env.FIREBASE_PROJECT_ID,\n    storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.FIREBASE_APP_ID\n  };\n\n  firebase.initializeApp(config);\n  return firebase;\n}\n","/* .App {\n  text-align: center;\n}\n\n.App-logo {\n  animation: App-logo-spin infinite 20s linear;\n  height: 40vmin;\n  pointer-events: none;\n}\n\n.App-header {\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n.App-link {\n  color: #61dafb;\n}\n\n@keyframes App-logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n} */\n","import React, { useEffect, useState, Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Cards from \"../components/Cards\";\n// import firebase from '../components/Firebase';\nimport Searchbar from \"../components/Searchbar\";\nimport Sidebar from \"../components/Sidebar\";\nimport \"./App.css\";\nimport { loadFireBase } from \"../lib/database\";\n\nexport default class App extends Component {\n  static async getInitialProps() {\n    let firebase = await loadFirebase();\n    let database = firebase.firestore();\n    let result = await new Promise((resolve, reject) => {\n      database\n        .collection()\n        .limit(10)\n        .get()\n        .then(snapshot => {\n          let data = [];\n          snapshot.forEach(doc => {\n            data.push(\n              Object.assign(\n                {\n                  id: doc.id\n                },\n                doc.data()\n              )\n            );\n          });\n          resolve(data);\n        })\n        .catch(error => {\n          reject([]);\n        });\n    });\n    return result;\n  }\n  render() {\n    return (\n      <div>\n        <Searchbar />\n        <Cards />\n        <Cards />\n        <Cards />\n        <Cards />\n        <Sidebar />\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AADA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAzCA;;;;A","sourceRoot":""}